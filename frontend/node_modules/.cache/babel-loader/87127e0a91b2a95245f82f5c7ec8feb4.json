{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\n\nfunction author(state = false, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return true;\n\n    case \"LOGOUT\":\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nfunction content(state = [], action) {\n  switch (action.type) {\n    case \"ADD_CONTENT\":\n      return [action.addContent, ...state];\n\n    case \"REMOVE_CONTENT\":\n      return state.filter((value, index) => {\n        return index !== Number(action.id);\n      });\n\n    case \"NEW_TYPE\":\n      return [];\n\n    default:\n      return state;\n  }\n}\n\nfunction newcollection(state = \"Other\", action) {\n  switch (action.type) {\n    case \"COLLETION\":\n      return action.collection;\n\n    default:\n      return state;\n  }\n}\n\nfunction getData(state = {\n  data: [],\n  typePost: \"\"\n}, action) {\n  switch (action.type) {\n    case \"ADD_DATA\":\n      return {\n        data: action.getData,\n        typePost: action.typePost\n      };\n\n    case \"REMOVE_DATA\":\n      return {\n        data: state.data.filter((value, index) => {\n          return index !== Number(action.indexdata);\n        }),\n        typePost: state.typePost\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction editData(state = \"\", action) {\n  switch (action.type) {\n    case \"EDIT_DATA\":\n      return action.dataEdit;\n\n    default:\n      return state;\n  }\n}\n\nconst root = combineReducers({\n  author,\n  content,\n  newcollection,\n  getData,\n  editData\n});\nconst store = createStore(root);\nexport default store;","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/redux/store.js"],"names":["combineReducers","createStore","author","state","action","type","content","addContent","filter","value","index","Number","id","newcollection","collection","getData","data","typePost","indexdata","editData","dataEdit","root","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,SAASC,MAAT,CAAgBC,KAAK,GAAG,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,IAAP;;AACF,SAAK,QAAL;AACE,aAAO,KAAP;;AACF;AACE,aAAOF,KAAP;AANJ;AAQD;;AAED,SAASG,OAAT,CAAiBH,KAAK,GAAG,EAAzB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,CAACD,MAAM,CAACG,UAAR,EAAoB,GAAGJ,KAAvB,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOA,KAAK,CAACK,MAAN,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,eAAOA,KAAK,KAAKC,MAAM,CAACP,MAAM,CAACQ,EAAR,CAAvB;AACD,OAFM,CAAP;;AAGF,SAAK,UAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOT,KAAP;AAVJ;AAYD;;AAED,SAASU,aAAT,CAAuBV,KAAK,GAAG,OAA/B,EAAwCC,MAAxC,EAAgD;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACU,UAAd;;AACF;AACE,aAAOX,KAAP;AAJJ;AAMD;;AAED,SAASY,OAAT,CAAiBZ,KAAK,GAAG;AAAEa,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,QAAQ,EAAE;AAAtB,CAAzB,EAAqDb,MAArD,EAA6D;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AAAEW,QAAAA,IAAI,EAAEZ,MAAM,CAACW,OAAf;AAAwBE,QAAAA,QAAQ,EAAEb,MAAM,CAACa;AAAzC,OAAP;;AACF,SAAK,aAAL;AACE,aAAO;AACLD,QAAAA,IAAI,EAAEb,KAAK,CAACa,IAAN,CAAWR,MAAX,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxC,iBAAOA,KAAK,KAAKC,MAAM,CAACP,MAAM,CAACc,SAAR,CAAvB;AACD,SAFK,CADD;AAILD,QAAAA,QAAQ,EAAEd,KAAK,CAACc;AAJX,OAAP;;AAMF;AACE,aAAOd,KAAP;AAXJ;AAaD;;AAED,SAASgB,QAAT,CAAkBhB,KAAK,GAAG,EAA1B,EAA8BC,MAA9B,EAAsC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACgB,QAAd;;AACF;AACE,aAAOjB,KAAP;AAJJ;AAMD;;AACD,MAAMkB,IAAI,GAAGrB,eAAe,CAAC;AAC3BE,EAAAA,MAD2B;AAE3BI,EAAAA,OAF2B;AAG3BO,EAAAA,aAH2B;AAI3BE,EAAAA,OAJ2B;AAK3BI,EAAAA;AAL2B,CAAD,CAA5B;AAQA,MAAMG,KAAK,GAAGrB,WAAW,CAACoB,IAAD,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\r\n\r\nfunction author(state = false, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return true;\r\n    case \"LOGOUT\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction content(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_CONTENT\":\r\n      return [action.addContent, ...state];\r\n    case \"REMOVE_CONTENT\":\r\n      return state.filter((value, index) => {\r\n        return index !== Number(action.id);\r\n      });\r\n    case \"NEW_TYPE\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction newcollection(state = \"Other\", action) {\r\n  switch (action.type) {\r\n    case \"COLLETION\":\r\n      return action.collection;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction getData(state = { data: [], typePost: \"\" }, action) {\r\n  switch (action.type) {\r\n    case \"ADD_DATA\":\r\n      return { data: action.getData, typePost: action.typePost };\r\n    case \"REMOVE_DATA\":\r\n      return {\r\n        data: state.data.filter((value, index) => {\r\n          return index !== Number(action.indexdata);\r\n        }),\r\n        typePost: state.typePost,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction editData(state = \"\", action) {\r\n  switch (action.type) {\r\n    case \"EDIT_DATA\":\r\n      return action.dataEdit;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst root = combineReducers({\r\n  author,\r\n  content,\r\n  newcollection,\r\n  getData,\r\n  editData,\r\n});\r\n\r\nconst store = createStore(root);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}