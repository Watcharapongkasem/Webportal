{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\n\nfunction author(state = false, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return true;\n\n    case \"LOGOUT\":\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nfunction content(state = [], action) {\n  switch (action.type) {\n    case \"ADD_CONTENT\":\n      return [...state, action.addContent];\n\n    case \"REMOVE_CONTENT\":\n      return state.filter((value, index) => {\n        return index !== action.id;\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction newcollection(state = 'ALL', action) {\n  switch (action.type) {\n    case \"COLLETION\":\n      return action.collection;\n\n    default:\n      return state;\n  }\n}\n\nconst root = combineReducers({\n  author,\n  content,\n  newcollection\n});\nconst store = createStore(root);\nexport default store;","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/redux/store.js"],"names":["combineReducers","createStore","author","state","action","type","content","addContent","filter","value","index","id","newcollection","collection","root","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,SAASC,MAAT,CAAgBC,KAAK,GAAG,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,IAAP;;AACF,SAAK,QAAL;AACE,aAAO,KAAP;;AACF;AACE,aAAOF,KAAP;AANJ;AAQD;;AAED,SAASG,OAAT,CAAiBH,KAAK,GAAG,EAAzB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACG,UAAlB,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOJ,KAAK,CAACK,MAAN,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,eAAOA,KAAK,KAAKN,MAAM,CAACO,EAAxB;AACD,OAFM,CAAP;;AAGF;AACE,aAAOR,KAAP;AARJ;AAUD;;AAED,SAASS,aAAT,CAAuBT,KAAK,GAAC,KAA7B,EAAmCC,MAAnC,EAA0C;AACxC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACS,UAAd;;AACF;AACE,aAAOV,KAAP;AAJJ;AAMD;;AAED,MAAMW,IAAI,GAAGd,eAAe,CAAC;AAAEE,EAAAA,MAAF;AAAUI,EAAAA,OAAV;AAAkBM,EAAAA;AAAlB,CAAD,CAA5B;AAEA,MAAMG,KAAK,GAAGd,WAAW,CAACa,IAAD,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\r\n\r\nfunction author(state = false, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return true;\r\n    case \"LOGOUT\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction content(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_CONTENT\":\r\n      return [...state, action.addContent];\r\n    case \"REMOVE_CONTENT\":\r\n      return state.filter((value, index) => {\r\n        return index !== action.id;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction newcollection(state='ALL',action){\r\n  switch(action.type){\r\n    case \"COLLETION\":\r\n      return action.collection;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst root = combineReducers({ author, content,newcollection});\r\n\r\nconst store = createStore(root);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}