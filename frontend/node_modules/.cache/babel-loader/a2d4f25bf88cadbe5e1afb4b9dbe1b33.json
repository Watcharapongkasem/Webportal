{"ast":null,"code":"function mapDispatchToProps(dispatch) {\n  return {\n    login: () => {\n      dispatch({\n        type: \"LOGIN\"\n      });\n    },\n    logout: () => {\n      dispatch({\n        type: \"LOGOUT\"\n      });\n    },\n    textInput: value => {\n      dispatch({\n        type: \"ADD_CONTENT\",\n        addContent: value\n      });\n    },\n    deleteInput: value => {\n      dispatch({\n        type: \"REMOVE_CONTENT\",\n        id: value\n      });\n    },\n    newType: () => {\n      dispatch({\n        type: \"NEW_TYPE\"\n      });\n    },\n    collections: value => {\n      dispatch({\n        type: \"COLLETION\",\n        collection: value\n      });\n    },\n    getApi: value => {\n      dispatch({\n        type: \"ADD_DATA\",\n        getData: value.data,\n        typePost: value.typePost\n      });\n    },\n    removeData: value => {\n      dispatch({\n        type: \"REMOVE_DATA\",\n        indexdata: value\n      });\n    },\n    input\n  };\n}\n\nexport default mapDispatchToProps;","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/redux/DispatchToProps.js"],"names":["mapDispatchToProps","dispatch","login","type","logout","textInput","value","addContent","deleteInput","id","newType","collections","collection","getApi","getData","data","typePost","removeData","indexdata","input"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,KAAK,EAAE,MAAM;AACXD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAHI;AAILC,IAAAA,MAAM,EAAE,MAAM;AACZH,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KANI;AAOLE,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBL,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,aAAR;AAAuBI,QAAAA,UAAU,EAAED;AAAnC,OAAD,CAAR;AACD,KATI;AAULE,IAAAA,WAAW,EAAGF,KAAD,IAAW;AACtBL,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BM,QAAAA,EAAE,EAAEH;AAA9B,OAAD,CAAR;AACD,KAZI;AAaLI,IAAAA,OAAO,EAAE,MAAM;AACbT,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAfI;AAgBLQ,IAAAA,WAAW,EAAGL,KAAD,IAAW;AACtBL,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,WAAR;AAAqBS,QAAAA,UAAU,EAAEN;AAAjC,OAAD,CAAR;AACD,KAlBI;AAmBLO,IAAAA,MAAM,EAAGP,KAAD,IAAW;AACjBL,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,UADC;AAEPW,QAAAA,OAAO,EAAER,KAAK,CAACS,IAFR;AAGPC,QAAAA,QAAQ,EAAEV,KAAK,CAACU;AAHT,OAAD,CAAR;AAKD,KAzBI;AA0BLC,IAAAA,UAAU,EAAGX,KAAD,IAAW;AACrBL,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,aAAR;AAAuBe,QAAAA,SAAS,EAAEZ;AAAlC,OAAD,CAAR;AACD,KA5BI;AA6BLa,IAAAA;AA7BK,GAAP;AA+BD;;AAED,eAAenB,kBAAf","sourcesContent":["function mapDispatchToProps(dispatch) {\r\n  return {\r\n    login: () => {\r\n      dispatch({ type: \"LOGIN\" });\r\n    },\r\n    logout: () => {\r\n      dispatch({ type: \"LOGOUT\" });\r\n    },\r\n    textInput: (value) => {\r\n      dispatch({ type: \"ADD_CONTENT\", addContent: value });\r\n    },\r\n    deleteInput: (value) => {\r\n      dispatch({ type: \"REMOVE_CONTENT\", id: value });\r\n    },\r\n    newType: () => {\r\n      dispatch({ type: \"NEW_TYPE\" });\r\n    },\r\n    collections: (value) => {\r\n      dispatch({ type: \"COLLETION\", collection: value });\r\n    },\r\n    getApi: (value) => {\r\n      dispatch({\r\n        type: \"ADD_DATA\",\r\n        getData: value.data,\r\n        typePost: value.typePost,\r\n      });\r\n    },\r\n    removeData: (value) => {\r\n      dispatch({ type: \"REMOVE_DATA\", indexdata: value });\r\n    },\r\n    input\r\n  };\r\n}\r\n\r\nexport default mapDispatchToProps;\r\n"]},"metadata":{},"sourceType":"module"}