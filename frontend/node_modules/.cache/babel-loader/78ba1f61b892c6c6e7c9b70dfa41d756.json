{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makeja\\\\webportal\\\\frontend\\\\src\\\\component\\\\pages\\\\Content.js\";\nimport React, { Component } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Content extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"toolbar-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: DecoupledEditor,\n        config: editorConfiguration,\n        data: \"<p>Content</p>\",\n        onInit: editor => {\n          // Add the toolbar to the container\n          const toolbarContainer = document.querySelector(\"#toolbar-container\");\n          toolbarContainer.appendChild(editor.ui.view.toolbar.element);\n          window.editor = editor; // You can store the \"editor\" and use when it is needed.\n\n          console.log(\"Editor is ready to use!\", editor);\n        },\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          console.log({\n            event,\n            editor,\n            data\n          });\n        },\n        onBlur: (event, editor) => {\n          console.log(\"Blur.\", editor);\n        },\n        onFocus: (event, editor) => {\n          console.log(\"Focus.\", editor);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/component/pages/Content.js"],"names":["React","Component","CKEditor","DecoupledEditor","Content","render","editorConfiguration","editor","toolbarContainer","document","querySelector","appendChild","ui","view","toolbar","element","window","console","log","event","data","getData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;;AAEA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC7CI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,MAAM,EAAEF,eADV;AAEE,QAAA,MAAM,EAAEG,mBAFV;AAGE,QAAA,IAAI,EAAC,gBAHP;AAIE,QAAA,MAAM,EAAGC,MAAD,IAAY;AAClB;AACA,gBAAMC,gBAAgB,GACpBC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CADF;AAEAF,UAAAA,gBAAgB,CAACG,WAAjB,CAA6BJ,MAAM,CAACK,EAAP,CAAUC,IAAV,CAAeC,OAAf,CAAuBC,OAApD;AAEAC,UAAAA,MAAM,CAACT,MAAP,GAAgBA,MAAhB,CANkB,CAOlB;;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCX,MAAvC;AACD,SAbH;AAcE,QAAA,QAAQ,EAAE,CAACY,KAAD,EAAQZ,MAAR,KAAmB;AAC3B,gBAAMa,IAAI,GAAGb,MAAM,CAACc,OAAP,EAAb;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,YAAAA,KAAF;AAASZ,YAAAA,MAAT;AAAiBa,YAAAA;AAAjB,WAAZ;AACD,SAjBH;AAkBE,QAAA,MAAM,EAAE,CAACD,KAAD,EAAQZ,MAAR,KAAmB;AACzBU,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,MAArB;AACD,SApBH;AAqBE,QAAA,OAAO,EAAE,CAACY,KAAD,EAAQZ,MAAR,KAAmB;AAC1BU,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,MAAtB;AACD;AAvBH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAhC4C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\n\r\nexport default class Content extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"toolbar-container\"></div>\r\n        <CKEditor\r\n          editor={DecoupledEditor}\r\n          config={editorConfiguration}\r\n          data=\"<p>Content</p>\"\r\n          onInit={(editor) => {\r\n            // Add the toolbar to the container\r\n            const toolbarContainer =\r\n              document.querySelector(\"#toolbar-container\");\r\n            toolbarContainer.appendChild(editor.ui.view.toolbar.element);\r\n\r\n            window.editor = editor;\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log(\"Editor is ready to use!\", editor);\r\n          }}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            console.log({ event, editor, data });\r\n          }}\r\n          onBlur={(event, editor) => {\r\n            console.log(\"Blur.\", editor);\r\n          }}\r\n          onFocus={(event, editor) => {\r\n            console.log(\"Focus.\", editor);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}