{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makeja\\\\webportal\\\\frontend\\\\src\\\\component\\\\pages\\\\Content.js\";\nimport React, { Component } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Content extends Component {\n  constructor(...args) {\n    super(...args);\n    this.editor = null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CKEditor 5 using a custom build - decoupled editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        onReady: editor => {\n          console.log('Editor is ready to use!', editor); // Insert the toolbar before the editable area.\n\n          editor.ui.getEditableElement().parentElement.insertBefore(editor.ui.view.toolbar.element, editor.ui.getEditableElement());\n          this.editor = editor;\n        },\n        onError: ({\n          willEditorRestart\n        }) => {\n          // If the editor is restarted, the toolbar element will be created once again.\n          // The `onReady` callback will be called again and the new toolbar will be added.\n          // This is why you need to remove the older toolbar.\n          if (willEditorRestart) {\n            this.editor.ui.view.toolbar.element.remove();\n          }\n        },\n        onChange: (event, editor) => console.log({\n          event,\n          editor\n        }),\n        editor: DecoupledEditor,\n        data: \"<p>Hello from CKEditor 5's decoupled editor!</p>\",\n        config: CKEditor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/component/pages/Content.js"],"names":["React","Component","CKEditor","DecoupledEditor","Content","editor","render","console","log","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","willEditorRestart","remove","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;;AAEA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CI,MAD2C,GAClC,IADkC;AAAA;;AAG3CC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AACI,QAAA,OAAO,EAAGD,MAAM,IAAI;AAChBE,UAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb,EAAwCH,MAAxC,EADgB,CAGhB;;AACAA,UAAAA,MAAM,CAACI,EAAP,CAAUC,kBAAV,GAA+BC,aAA/B,CAA6CC,YAA7C,CACIP,MAAM,CAACI,EAAP,CAAUI,IAAV,CAAeC,OAAf,CAAuBC,OAD3B,EAEIV,MAAM,CAACI,EAAP,CAAUC,kBAAV,EAFJ;AAKA,eAAKL,MAAL,GAAcA,MAAd;AACH,SAXL;AAYI,QAAA,OAAO,EAAG,CAAE;AAAEW,UAAAA;AAAF,SAAF,KAA6B;AACnC;AACA;AACA;AACA,cAAKA,iBAAL,EAAyB;AACrB,iBAAKX,MAAL,CAAYI,EAAZ,CAAeI,IAAf,CAAoBC,OAApB,CAA4BC,OAA5B,CAAoCE,MAApC;AACH;AACJ,SAnBL;AAoBI,QAAA,QAAQ,EAAG,CAAEC,KAAF,EAASb,MAAT,KAAqBE,OAAO,CAACC,GAAR,CAAa;AAAEU,UAAAA,KAAF;AAASb,UAAAA;AAAT,SAAb,CApBpC;AAqBI,QAAA,MAAM,EAAGF,eArBb;AAsBI,QAAA,IAAI,EAAC,kDAtBT;AAuBI,QAAA,MAAM,EAAED;AAvBZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AAlC0C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\r\n\r\nexport default class Content extends Component {\r\n    editor = null;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <h2>CKEditor 5 using a custom build - decoupled editor</h2>\r\n                <CKEditor\r\n                    onReady={ editor => {\r\n                        console.log( 'Editor is ready to use!', editor );\r\n\r\n                        // Insert the toolbar before the editable area.\r\n                        editor.ui.getEditableElement().parentElement.insertBefore(\r\n                            editor.ui.view.toolbar.element,\r\n                            editor.ui.getEditableElement()\r\n                        );\r\n\r\n                        this.editor = editor;\r\n                    } }\r\n                    onError={ ( { willEditorRestart } ) => {\r\n                        // If the editor is restarted, the toolbar element will be created once again.\r\n                        // The `onReady` callback will be called again and the new toolbar will be added.\r\n                        // This is why you need to remove the older toolbar.\r\n                        if ( willEditorRestart ) {\r\n                            this.editor.ui.view.toolbar.element.remove();\r\n                        }\r\n                    } }\r\n                    onChange={ ( event, editor ) => console.log( { event, editor } ) }\r\n                    editor={ DecoupledEditor }\r\n                    data=\"<p>Hello from CKEditor 5's decoupled editor!</p>\"\r\n                    config={CKEditor}\r\n                />\r\n                </div>\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}