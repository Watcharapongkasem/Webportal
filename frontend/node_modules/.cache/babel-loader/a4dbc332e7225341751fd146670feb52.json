{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\n\nfunction author(state = false, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return true;\n\n    case \"LOGOUT\":\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nfunction content(state = [], action) {\n  switch (action.type) {\n    case \"ADD_CONTENT\":\n      return [...state, action.addContent];\n\n    case \"REMOVE_CONTENT\":\n      return state.filter((value, index) => {\n        return index !== action.id;\n      });\n\n    case \"NEW_TYPE\":\n      return [];\n\n    default:\n      return state;\n  }\n}\n\nfunction newcollection(state = \"Other\", action) {\n  switch (action.type) {\n    case \"COLLETION\":\n      return action.collection;\n\n    default:\n      return state;\n  }\n}\n\nfunction getData(state = {\n  data: [],\n  typePost: \"\"\n}, action) {\n  switch (action.type) {\n    case \"ADD_DATA\":\n      return {\n        data: action.getData,\n        typePost: action.typePost\n      };\n\n    case \"REMOVE_DATA\":\n      return {\n        data: state.data.filter((value, index) => {\n          return index != action.indexdata;\n        }),\n        typePost: state.typePost\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst root = combineReducers({\n  author,\n  content,\n  newcollection,\n  getData\n});\nconst store = createStore(root);\nexport default store;","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/redux/store.js"],"names":["combineReducers","createStore","author","state","action","type","content","addContent","filter","value","index","id","newcollection","collection","getData","data","typePost","indexdata","root","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,SAASC,MAAT,CAAgBC,KAAK,GAAG,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,IAAP;;AACF,SAAK,QAAL;AACE,aAAO,KAAP;;AACF;AACE,aAAOF,KAAP;AANJ;AAQD;;AAED,SAASG,OAAT,CAAiBH,KAAK,GAAG,EAAzB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACG,UAAlB,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOJ,KAAK,CAACK,MAAN,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,eAAOA,KAAK,KAAKN,MAAM,CAACO,EAAxB;AACD,OAFM,CAAP;;AAGF,SAAK,UAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOR,KAAP;AAVJ;AAYD;;AAED,SAASS,aAAT,CAAuBT,KAAK,GAAG,OAA/B,EAAwCC,MAAxC,EAAgD;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOD,MAAM,CAACS,UAAd;;AACF;AACE,aAAOV,KAAP;AAJJ;AAMD;;AAED,SAASW,OAAT,CAAiBX,KAAK,GAAG;AAAEY,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,QAAQ,EAAE;AAAtB,CAAzB,EAAqDZ,MAArD,EAA6D;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AAAEU,QAAAA,IAAI,EAAEX,MAAM,CAACU,OAAf;AAAwBE,QAAAA,QAAQ,EAAEZ,MAAM,CAACY;AAAzC,OAAP;;AACF,SAAK,aAAL;AACE,aAAO;AAACD,QAAAA,IAAI,EAACZ,KAAK,CAACY,IAAN,CAAWP,MAAX,CAAkB,CAACC,KAAD,EAAOC,KAAP,KAAe;AAAC,iBAAOA,KAAK,IAAEN,MAAM,CAACa,SAArB;AAA+B,SAAjE,CAAN;AAAyED,QAAAA,QAAQ,EAACb,KAAK,CAACa;AAAxF,OAAP;;AACF;AACE,aAAOb,KAAP;AANJ;AAQD;;AACD,MAAMe,IAAI,GAAGlB,eAAe,CAAC;AAAEE,EAAAA,MAAF;AAAUI,EAAAA,OAAV;AAAmBM,EAAAA,aAAnB;AAAkCE,EAAAA;AAAlC,CAAD,CAA5B;AAEA,MAAMK,KAAK,GAAGlB,WAAW,CAACiB,IAAD,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\r\n\r\nfunction author(state = false, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return true;\r\n    case \"LOGOUT\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction content(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_CONTENT\":\r\n      return [...state, action.addContent];\r\n    case \"REMOVE_CONTENT\":\r\n      return state.filter((value, index) => {\r\n        return index !== action.id;\r\n      });\r\n    case \"NEW_TYPE\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction newcollection(state = \"Other\", action) {\r\n  switch (action.type) {\r\n    case \"COLLETION\":\r\n      return action.collection;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction getData(state = { data: [], typePost: \"\" }, action) {\r\n  switch (action.type) {\r\n    case \"ADD_DATA\":\r\n      return { data: action.getData, typePost: action.typePost };\r\n    case \"REMOVE_DATA\":\r\n      return {data:state.data.filter((value,index)=>{return index!=action.indexdata}),typePost:state.typePost}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst root = combineReducers({ author, content, newcollection, getData });\r\n\r\nconst store = createStore(root);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}