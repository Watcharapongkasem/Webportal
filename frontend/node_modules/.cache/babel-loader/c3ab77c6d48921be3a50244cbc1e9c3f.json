{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\n\nfunction author(state = false, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return true;\n\n    case \"LOGOUT\":\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nfunction content(state = [], action) {\n  switch (action.type) {\n    case \"ADD_CONTENT\":\n      return state.concat(action.addContent);\n\n    case \"REMOVE_CONTENT\":\n      return state.filter((value, index) => {\n        return index !== action.id;\n      });\n  }\n}\n\nconst root = combineReducers({\n  author,\n  content\n});\nconst store = createStore(author);\nexport default store;","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/redux/store.js"],"names":["combineReducers","createStore","author","state","action","type","content","concat","addContent","filter","value","index","id","root","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,SAASC,MAAT,CAAgBC,KAAK,GAAG,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,IAAP;;AACF,SAAK,QAAL;AACE,aAAO,KAAP;;AACF;AAAQ,aAAOF,KAAP;AALV;AAOD;;AAED,SAASG,OAAT,CAAiBH,KAAK,GAAC,EAAvB,EAA0BC,MAA1B,EAAiC;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACE,aAAOF,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACI,UAApB,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOL,KAAK,CAACM,MAAN,CAAa,CAACC,KAAD,EAAOC,KAAP,KAAe;AACjC,eAAQA,KAAK,KAAGP,MAAM,CAACQ,EAAvB;AACD,OAFM,CAAP;AAJJ;AAQD;;AAED,MAAMC,IAAI,GAAGb,eAAe,CAAC;AAACE,EAAAA,MAAD;AAAQI,EAAAA;AAAR,CAAD,CAA5B;AAEA,MAAMQ,KAAK,GAAGb,WAAW,CAACC,MAAD,CAAzB;AAEA,eAAeY,KAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\r\n\r\nfunction author(state = false, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return true;\r\n    case \"LOGOUT\":\r\n      return false;\r\n    default:return state\r\n  }\r\n}\r\n\r\nfunction content(state=[],action){\r\n  switch(action.type){\r\n    case \"ADD_CONTENT\":\r\n      return state.concat(action.addContent)\r\n    case \"REMOVE_CONTENT\":\r\n      return state.filter((value,index)=>{\r\n        return  index!==action.id\r\n      })\r\n  }\r\n}\r\n\r\nconst root = combineReducers({author,content})\r\n\r\nconst store = createStore(author);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}