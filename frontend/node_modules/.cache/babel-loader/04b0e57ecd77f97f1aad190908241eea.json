{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makeja\\\\webportal\\\\frontend\\\\src\\\\component\\\\pages\\\\EditContent.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport mapDispatchToProps from \"../../redux/DispatchToProps\";\nimport mapStateToProps from \"../../redux/StateToProps\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditContent extends Component {\n  async onCollection(e) {\n    await fetch(\"/post/\" + e.target.value).then(res => res.json()).then(res => {\n      this.props.collections(e.target.value);\n      this.props.getApi({\n        data: res.dataPost,\n        typePost: e.target.value\n      });\n      this.props.newType();\n    });\n  }\n\n  async onSubmit(e) {\n    if (this.props.typecollection !== \"ALL\") {\n      await fetch(\"/post\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          collectionPost: this.props.typecollection,\n          dataPost: document.getElementById(\"textcontent\").value,\n          authorPost: \"admin\"\n        })\n      });\n      this.props.textInput(document.getElementById(\"textcontent\").value);\n      document.getElementById(\"textcontent\").value = \"\";\n    }\n  }\n\n  async onDelete(e) {\n    await fetch(\"/post\", {\n      method: \"delete\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        typecollect: this.props.getnewdata.typePost,\n        index1: e.currentTarget.name\n      })\n    }).then(res => res.json()).then(res => {\n      /* this.props.removeData() */\n    });\n    console.log(e.currentTarget.name);\n  }\n\n  render() {\n    var namelist = [\"ALL\", \"House\", \"Game\", \"Pet\", \"Other\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center mt-3\",\n          children: \"List EditContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between \",\n          children: namelist.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"w-25 m-3 btn btn-light border rounded text-center\",\n              type: \"button\",\n              value: value,\n              id: index,\n              onClick: this.onCollection.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"textcontent\",\n            className: \"w-75 mh-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"POST\",\n            onClick: this.onSubmit.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container d-flex flex-column bd-highlight mb-3\",\n          children: [this.props.textcontent.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"p-2 bg-primary mb-2\",\n              id: value + index,\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this);\n          }), this.props.getnewdata.typePost === \"ALL\" ? this.props.getnewdata.data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-primary mb-2\",\n              id: value + index,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: namelist[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this), value.map((value1, index1) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-secondary mb-2\",\n                  id: value1 + index1,\n                  children: value1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 27\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this);\n          }) : this.props.getnewdata.data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-primary mb-2\",\n              id: value + index,\n              children: [value, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEdit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.onDelete.bind(this),\n                name: index,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrashAlt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(EditContent);","map":{"version":3,"sources":["C:/Users/makeja/webportal/frontend/src/component/pages/EditContent.js"],"names":["React","Component","connect","withRouter","compose","mapDispatchToProps","mapStateToProps","FontAwesomeIcon","faTrashAlt","faEdit","EditContent","onCollection","e","fetch","target","value","then","res","json","props","collections","getApi","data","dataPost","typePost","newType","onSubmit","typecollection","method","headers","Accept","body","JSON","stringify","collectionPost","document","getElementById","authorPost","textInput","onDelete","typecollect","getnewdata","index1","currentTarget","name","console","log","render","namelist","map","index","bind","textcontent","value1"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport mapDispatchToProps from \"../../redux/DispatchToProps\";\r\nimport mapStateToProps from \"../../redux/StateToProps\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass EditContent extends Component {\r\n  async onCollection(e) {\r\n    await fetch(\"/post/\" + e.target.value)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        this.props.collections(e.target.value);\r\n        this.props.getApi({ data: res.dataPost, typePost: e.target.value });\r\n        this.props.newType();\r\n      });\r\n  }\r\n\r\n  async onSubmit(e) {\r\n    if (this.props.typecollection !== \"ALL\") {\r\n      await fetch(\"/post\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          collectionPost: this.props.typecollection,\r\n          dataPost: document.getElementById(\"textcontent\").value,\r\n          authorPost: \"admin\",\r\n        }),\r\n      });\r\n\r\n      this.props.textInput(document.getElementById(\"textcontent\").value);\r\n      document.getElementById(\"textcontent\").value = \"\";\r\n    }\r\n  }\r\n\r\n  async onDelete(e) {\r\n    await fetch(\"/post\", {\r\n      method: \"delete\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        typecollect: this.props.getnewdata.typePost,\r\n        index1:e.currentTarget.name\r\n      }),\r\n    }).then(res=>res.json()).then(res=>{\r\n/* this.props.removeData() */\r\n    })\r\n    console.log(e.currentTarget.name);\r\n    \r\n  }\r\n\r\n  render() {\r\n    var namelist = [\"ALL\", \"House\", \"Game\", \"Pet\", \"Other\"];\r\n    return (\r\n      <div>\r\n        <div>\r\n          {/* typecollection */}\r\n          <p className=\"text-center mt-3\">List EditContent</p>\r\n          <div className=\"d-flex justify-content-between \">\r\n            {namelist.map((value, index) => {\r\n              return (\r\n                <input\r\n                  className=\"w-25 m-3 btn btn-light border rounded text-center\"\r\n                  type=\"button\"\r\n                  value={value}\r\n                  id={index}\r\n                  onClick={this.onCollection.bind(this)}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* textcontent */}\r\n          <div className=\"d-flex justify-content-center mb-2\">\r\n            <textarea id=\"textcontent\" className=\"w-75 mh-100\"></textarea>\r\n            <input\r\n              type=\"button\"\r\n              value=\"POST\"\r\n              onClick={this.onSubmit.bind(this)}\r\n            />\r\n          </div>\r\n          {/* content */}\r\n          <div class=\"container d-flex flex-column bd-highlight mb-3\">\r\n            {this.props.textcontent.map((value, index) => {\r\n              return (\r\n                <div class=\"p-2 bg-primary mb-2\" id={value + index}>\r\n                  {value}\r\n                </div>\r\n              );\r\n            })}\r\n            {this.props.getnewdata.typePost === \"ALL\"\r\n              ? this.props.getnewdata.data.map((value, index) => {\r\n                  return (\r\n                    <div className=\"p-2 bg-primary mb-2\" id={value + index}>\r\n                      <div>{namelist[index]}</div>\r\n                      {value.map((value1, index1) => {\r\n                        return (\r\n                          <div\r\n                            className=\"p-2 bg-secondary mb-2\"\r\n                            id={value1 + index1}\r\n                          >\r\n                            {value1}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                })\r\n              : this.props.getnewdata.data.map((value, index) => {\r\n                  return (\r\n                    <div className=\"p-2 bg-primary mb-2\" id={value + index}>\r\n                      {value}\r\n                      <FontAwesomeIcon icon={faEdit} />\r\n                      <button onClick={this.onDelete.bind(this)} name={index}>\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(EditContent);\r\n"]},"metadata":{},"sourceType":"module"}